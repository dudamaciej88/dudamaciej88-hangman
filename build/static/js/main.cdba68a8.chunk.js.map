{"version":3,"sources":["components/Button.module.css","components/AnswerDisplayer.module.css","components/Popup.module.css","components/Backdrop.module.css","components/HintDisplayer.module.css","components/Keyboard.module.css","components/Bar.module.css","components/Hangman.module.css","components/Button.js","components/Bar.js","components/AnswerDisplayer.js","components/Keyboard.js","components/Popup.js","components/Backdrop.js","axios-quiz.js","components/HintDisplayer.js","components/Hangman.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","className","classes","onClick","clicked","btnTxt","Bar","class","BarTop","BarBottom","barTxt","btn","AnswerDisplayer","letters","answer","split","map","word","i","key","letter","Letter","guesses","includes","Visible","Hidden","Displayer","Keyboard","guessedLetters","missedLetters","Guessed","Popup","Result","msg","clicked1","btnTxt1","clicked2","btnTxt2","Backdrop","hide","instance","axios","create","baseURL","HintDisplayer","hintTxt","hintData","Hangman","state","hint","animalsData","moviesData","movies","animals","won","gameStarted","keyboardHandler","e","letterCompareHandler","wonHandler","replace","join","length","setState","guessedOrNotIndex","findIndex","el","concat","setAnswer","categoryChoosen","animalRandom","Object","getOwnPropertyNames","Math","floor","random","animalToAnswer","toLowerCase","toString","moviesRandom","moviesToAnswer","startHandler","playAgainHandler","console","log","document","addEventListener","get","then","response","data","catch","error","removeEventListener","this","Hint","backdropHideHandler","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdba68a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3pMEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Displayer\":\"AnswerDisplayer_Displayer__1vkxJ\",\"opacityGrow\":\"AnswerDisplayer_opacityGrow__2IW_F\",\"Letter\":\"AnswerDisplayer_Letter__28mOb\",\"Visible\":\"AnswerDisplayer_Visible__3qbXk\",\"Hidden\":\"AnswerDisplayer_Hidden__1PH02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Result\":\"Popup_Result__3y316\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2QDMi\",\"backdropShow\":\"Backdrop_backdropShow__3hs2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HintDisplayer\":\"HintDisplayer_HintDisplayer__1UqRj\",\"opacityGrow\":\"HintDisplayer_opacityGrow__2XE_t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Keyboard\":\"Keyboard_Keyboard__1zdhK\",\"opacityGrow\":\"Keyboard_opacityGrow__12yoX\",\"Letter\":\"Keyboard_Letter__3rmbo\",\"Guessed\":\"Keyboard_Guessed__3UeAb\",\"myAnimation\":\"Keyboard_myAnimation__1ckk8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BarTop\":\"Bar_BarTop__pC7Ot\",\"barTopShow\":\"Bar_barTopShow__jFrxe\",\"BarBottom\":\"Bar_BarBottom__36mHl\",\"barBottomShow\":\"Bar_barBottomShow__2o4Kk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hangman\":\"Hangman_Hangman__1M5KM\",\"Hint\":\"Hangman_Hint__1nNaK\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\"\r\n\r\n\r\nconst Button = props => {\r\n\r\n\r\n\r\nreturn (\r\n<button className={classes.Button} onClick={props.clicked}>{props.btnTxt}</button>\r\n)\r\n\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./Bar.module.css\"\r\n\r\n\r\nconst Bar = props => {\r\n\r\n\r\n\r\nreturn (\r\n<div className={props.class ? classes.BarTop : classes.BarBottom}>\r\n<p>{props.barTxt}</p>\r\n{props.btn ? <Button clicked={props.clicked} btnTxt={props.btnTxt}/> : null}\r\n    </div>\r\n)\r\n\r\n};\r\n\r\nexport default Bar;","import React from \"react\";\r\nimport classes from \"./AnswerDisplayer.module.css\";\r\n\r\nconst AnswerDisplayer = props => {\r\n  const phrase = props.answer.split(/[ ,]+/);\r\n  const words = phrase.map(word => word.split(\"\"));\r\n\r\n  const letters = words.map((word, i) => (\r\n    <ul key={i}>\r\n      {word.map((letter, i) => (\r\n        <li key={i} className={classes.Letter}>\r\n          <span\r\n            className={\r\n              props.guesses.includes(letter) ? classes.Visible : classes.Hidden\r\n            }\r\n          >\r\n            {letter}\r\n          </span>\r\n        </li>\r\n      ))}\r\n      <li>&nbsp;</li>\r\n    </ul>\r\n  ));\r\n\r\n  return (\r\n  <div className={classes.Displayer}>{letters}</div>\r\n  \r\n  );\r\n};\r\n\r\nexport default AnswerDisplayer;\r\n","import React from \"react\";\r\nimport classes from \"./Keyboard.module.css\";\r\n\r\nconst letters = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\r\n\r\nconst Keyboard = props => (\r\n  <ul className={classes.Keyboard}>\r\n    {letters.map(letter => (\r\n      <li\r\n        key={letter}\r\n        className={\r\n          props.guessedLetters.includes(letter) ||\r\n          props.missedLetters.includes(letter)\r\n            ? classes.Guessed\r\n            : classes.Letter\r\n        }\r\n        onClick={() => props.onClick(letter)}\r\n      >\r\n        {letter}\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Keyboard;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./Popup.module.css\";\r\n\r\n\r\nconst Popup = props => (\r\n  <div className={classes.Result}>\r\n    <p>{props.msg}</p>\r\n  <Button clicked={props.clicked1} btnTxt={props.btnTxt1}/>\r\n  <Button clicked={props.clicked2} btnTxt={props.btnTxt2}/>\r\n  </div>\r\n);\r\n\r\nexport default Popup;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\n\r\nconst Backdrop = props => (\r\n\r\n<div className={classes.Backdrop} onClick={props.hide}></div>\r\n\r\n);\r\n\r\nexport default Backdrop;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://wicked-quiz.firebaseio.com/'\r\n});\r\n\r\n\r\nexport default instance;","import React from \"react\";\r\nimport classes from \"./HintDisplayer.module.css\"\r\n\r\n\r\nconst HintDisplayer = props => {\r\n\r\n\r\n\r\nreturn (\r\n<div className={classes.HintDisplayer}><p>{props.hintTxt}{props.hintData}</p></div>\r\n)\r\n\r\n};\r\n\r\nexport default HintDisplayer;","import React, { Component } from \"react\";\r\nimport Bar from \"./Bar\";\r\nimport AnswerDisplayer from \"./AnswerDisplayer\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport Popup from \"./Popup\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport axios from \"../axios-quiz\";\r\nimport HintDisplayer from \"./HintDisplayer\";\r\nimport classes from \"./Hangman.module.css\";\r\n\r\nclass Hangman extends Component {\r\n  state = {\r\n    answer: \"\",\r\n    hint: {},\r\n    guessedLetters: [],\r\n    missedLetters: [],\r\n    animalsData: {},\r\n    moviesData: {},\r\n    movies: false,\r\n    animals: false,\r\n    won: false,\r\n    gameStarted: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    document.addEventListener(\"keydown\", e => this.keyboardHandler(e));\r\n    const animalsDataHandler = () => {\r\n      axios\r\n        .get(\"/Animals.json\")\r\n        .then(response => {\r\n          this.setState({\r\n            animalsData: response.data\r\n          });\r\n        })\r\n        .catch(error => console.log(error));\r\n    };\r\n    animalsDataHandler();\r\n    const moviesDataHandler = () => {\r\n      axios\r\n        .get(\"/Movies.json\")\r\n        .then(response => {\r\n          this.setState({\r\n            moviesData: response.data\r\n          });\r\n        })\r\n        .catch(error => console.log(error));\r\n    };\r\n    moviesDataHandler();\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", e => this.keyboardHandler(e));\r\n  }\r\n\r\n  keyboardHandler = e => {\r\n    const letters = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\r\n    if (letters.includes(e.key)) {\r\n      this.letterCompareHandler(e.key);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  wonHandler = () => {\r\n    const test1 = this.state.answer\r\n      .replace(/(.)(?=.*\\1)/g, \"\")\r\n      .split(\" \")\r\n      .join(\"\")\r\n      .split(\"\");\r\n    if (test1.length === this.state.guessedLetters.length) {\r\n      this.setState({ won: true });\r\n    }\r\n  };\r\n\r\n  letterCompareHandler = letter => {\r\n    const answer = this.state.answer.split(\"\");\r\n    const guessedOrNotIndex = answer.findIndex(el => el === letter);\r\n\r\n    if (this.state.guessedLetters.includes(letter)) {\r\n      return null;\r\n    } else {\r\n      if (guessedOrNotIndex > -1) {\r\n        const guessedLetters = this.state.guessedLetters.concat(letter);\r\n        this.setState({ guessedLetters: guessedLetters }, this.wonHandler);\r\n      } else {\r\n        const missedLetters = this.state.missedLetters.concat(letter);\r\n        this.setState({ missedLetters: missedLetters });\r\n      }\r\n    }\r\n  };\r\n\r\n  setAnswer = categoryChoosen => {\r\n    if (categoryChoosen === \"Animals\") {\r\n      const animalsNames = Object.getOwnPropertyNames(\r\n        this.state.animalsData[\"-M1lH5PO7Mv_29581dC1\"]\r\n      );\r\n      let animalRandom = animalsNames[Math.floor(Math.random() * 40)];\r\n      let animalToAnswer = animalRandom.toLowerCase();\r\n      this.setState({ answer: animalToAnswer });\r\n      const hint = this.state.animalsData[\"-M1lH5PO7Mv_29581dC1\"][\r\n        animalRandom.toString()\r\n      ];\r\n      this.setState({ hint: hint });\r\n      this.setState({ animals: true });\r\n    } else {\r\n      const moviesNames = Object.getOwnPropertyNames(this.state.moviesData);\r\n      let moviesRandom = moviesNames[Math.floor(Math.random() * 46)];\r\n      let moviesToAnswer = moviesRandom.toLowerCase();\r\n      this.setState({ answer: moviesToAnswer });\r\n      const hint = this.state.moviesData[moviesRandom.toString()];\r\n      this.setState({ hint: hint });\r\n      this.setState({ movies: true });\r\n    }\r\n  };\r\n\r\n  startHandler = categoryChoosen => {\r\n    this.setState({ guessedLetters: [] });\r\n    this.setState({ missedLetters: [] });\r\n    this.setState({ won: false });\r\n    this.setState({ gameStarted: true });\r\n    this.setState({ movies: false });\r\n    this.setState({ animals: false });\r\n    this.setAnswer(categoryChoosen);\r\n  };\r\n\r\n  playAgainHandler = () => {\r\n    this.setState({ answer: \"\" });\r\n    this.setState({ hint: {} });\r\n    this.setState({ guessedLetters: [] });\r\n    this.setState({ missedLetters: [] });\r\n    this.setState({ movies: false });\r\n    this.setState({ animals: false });\r\n    this.setState({ won: false });\r\n    this.setState({ gameStarted: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Hangman}>\r\n        {this.state.gameStarted ? (\r\n          <Bar\r\n            class={true}\r\n            barTxt={\r\n              this.state.animals\r\n                ? \"Animal name:\"\r\n                : this.state.movies\r\n                ? \"Movie title:\"\r\n                : null\r\n            }\r\n          />\r\n        ) : null}\r\n        {this.state.answer ? (\r\n          <>\r\n            <AnswerDisplayer\r\n              answer={this.state.answer}\r\n              guesses={this.state.guessedLetters}\r\n            />\r\n            <div className={classes.Hint}>\r\n              {this.state.missedLetters.length > 4 && this.state.animals ? (\r\n                <HintDisplayer\r\n                  hintTxt={\"Place of living: \"}\r\n                  hintData={this.state.hint[\"Place\"]}\r\n                />\r\n              ) : null}\r\n              {this.state.missedLetters.length > 4 && this.state.movies ? (\r\n                <HintDisplayer\r\n                  hintTxt={\"Stars: \"}\r\n                  hintData={this.state.hint[\"Stars\"]}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <Keyboard\r\n              onClick={this.letterCompareHandler}\r\n              guessedLetters={this.state.guessedLetters}\r\n              missedLetters={this.state.missedLetters}\r\n            />\r\n          </>\r\n        ) : null}\r\n        {this.state.won ? (\r\n          <Popup\r\n            msg={\"You won!\"}\r\n            clicked1={() => this.startHandler(\"Animals\")}\r\n            btnTxt1={\"Animals\"}\r\n            clicked2={() => this.startHandler(\"Movies\")}\r\n            btnTxt2={\"Movies\"}\r\n          />\r\n        ) : null}\r\n        {!this.state.gameStarted ? (\r\n          <Popup\r\n            msg={\"Choose category:\"}\r\n            clicked1={() => this.startHandler(\"Animals\")}\r\n            btnTxt1={\"Animals\"}\r\n            clicked2={() => this.startHandler(\"Movies\")}\r\n            btnTxt2={\"Movies\"}\r\n          />\r\n        ) : null}\r\n        {this.state.won || !this.state.gameStarted ? (\r\n          <Backdrop hide={this.backdropHideHandler} />\r\n        ) : null}\r\n        {this.state.gameStarted ? (\r\n          <Bar\r\n            btn={true}\r\n            clicked={this.playAgainHandler}\r\n            btnTxt={\"Play Again\"}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hangman;\r\n","import React from 'react';\nimport './App.css';\nimport Hangman from './components/Hangman';\n\nfunction App() {\n  return (\n    <div>\n      <Hangman />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}